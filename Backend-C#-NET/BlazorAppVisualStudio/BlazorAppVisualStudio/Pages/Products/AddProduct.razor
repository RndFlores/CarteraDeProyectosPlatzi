@page "/addproduct"
@* servicio de producto que tiene el metodo de guardar *@
@inject IProductService productService
@inject ICategoryService categoryService
@* componente de navegacion de blazor para navegar entre este componente y el de product *@
@inject NavigationManager NavigationManager

<PageTitle>Add - Products</PageTitle>

<ModuleTitle Title="Add product"></ModuleTitle>

@* boton para volver a product 'onclick' es un evento y en blazor se usa con @ *@
<button class="btn btn-dark" @onclick="@(()=>NavigationManager.NavigateTo("/product"))">Go back Product</button>

@* El EDITFORM:
	es para cuando tengamos un formulario y poder asociar ese formulario a un modelo en particular
	con Model="" asociamos el formulario al modelo de producto
*@
@* cuando se ejecuta el submit  se llamara al save y guardará la imagen *@
<EditForm Model="@product" OnSubmit="@Save">
	<div class="row">
		<div class="col-8 form-group">
			<label for="title" class="col-form-label"> Title</label>
			<InputText id="title" @bind-Value="product.Title" required class="form-control"></InputText>
		</div>

		<div class="col-8 form-group">
			<label for="price" class="col-form-label"> Price</label>
			<InputNumber id="price" @bind-Value="product.Price" required class="form-control"></InputNumber>
		</div>
	</div>
	<div class="row">
		<div class="col form-group">
			<label for="category" class="col-form-label">Category</label>
			<InputSelect id="category" @bind-Value="product.CategoryId" required class="form-control">
				<option>Select Category...</option>
				@foreach (var category in categories)
				{
					<option value="@category.Id">@category.Name</option>
				}
			</InputSelect>
		</div>
		<div class="col form-group">
			<label for="image" class="col-form-label">Image (Url)</label>
			<InputText id="image" @bind-Value="product.Image" required class="form-control" />
		</div>
	</div>
	<div class="form-group">
		<label for="description" class="col-form-label">Description</label>
		<InputText id="description" @bind-Value="product.Description" required class="form-control"></InputText>
	</div>

	<hr />
	<button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code{

	private Product product = new Product();

	private List<Category> categories = new List<Category>();

	protected override async Task OnInitializedAsync(){
		categories = await categoryService.Get();
	}
	private async Task Save(){
		product.Images = new string[1] { product.Image };
		await productService.Add(product);
		NavigationManager.NavigateTo("/product");
	}
}